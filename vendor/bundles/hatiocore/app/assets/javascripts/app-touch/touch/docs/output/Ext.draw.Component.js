Ext.data.JsonP.Ext_draw_Component({"html_meta":{},"mixins":[],"code_type":"ext_define","inheritable":false,"uses":["Ext.draw.Surface"],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Component<div class='subclass '><strong>Ext.draw.Component</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/Ext.chart.Chart' rel='Ext.chart.Chart' class='docClass'>Ext.chart.Chart</a></div><h4>Uses</h4><div class='dependency'><a href='#!/api/Ext.draw.Surface' rel='Ext.draw.Surface' class='docClass'>Ext.draw.Surface</a></div><h4>Files</h4><div class='dependency'><a href='source/Component.html#Ext-draw-Component' target='_blank'>Component.js</a></div></pre><div class='doc-contents'><p>The Draw Component is a surface in which sprites can be rendered. The Draw Component\nmanages and holds a <code>Surface</code> instance: an interface that has\nan SVG or VML implementation depending on the browser capabilities and where\nSprites can be appended.\nOne way to create a draw component is:</p>\n\n<pre><code>var drawComponent = new <a href=\"#!/api/Ext.draw.Component\" rel=\"Ext.draw.Component\" class=\"docClass\">Ext.draw.Component</a>({\n    items: [{\n        type: 'circle',\n        fill: '#79BB3F',\n        radius: 100,\n        x: 100,\n        y: 100\n    }]\n});\n\nnew Ext.Panel({\n    fullscreen: true,\n    items: [drawComponent]\n});\n</code></pre>\n\n<p>In this case we created a draw component and added a sprite to it.\nThe <em>type</em> of the sprite is <em>circle</em> so if you run this code you'll see a yellow-ish\ncircle in a Window. When setting <code>viewBox</code> to <code>false</code> we are responsible for setting the object's position and\ndimensions accordingly.</p>\n\n<p>You can also add sprites by using the surface's add method:</p>\n\n<pre><code>drawComponent.surface.add({\n    type: 'circle',\n    fill: '#79BB3F',\n    radius: 100,\n    x: 100,\n    y: 100\n});\n</code></pre>\n\n<p>For more information on Sprites, the core elements added to a draw component's surface,\nrefer to the <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a> documentation.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-autoSize' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.draw.Component'>Ext.draw.Component</span><br/><a href='source/Component.html#Ext-draw-Component-cfg-autoSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.draw.Component-cfg-autoSize' class='name expandable'>autoSize</a><span> : Boolean</span></div><div class='description'><div class='short'>Turn on autoSize support which will set the bounding div's size to the natural size of the contents. ...</div><div class='long'><p>Turn on autoSize support which will set the bounding div's size to the natural size of the contents.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-enginePriority' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.draw.Component'>Ext.draw.Component</span><br/><a href='source/Component.html#Ext-draw-Component-cfg-enginePriority' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.draw.Component-cfg-enginePriority' class='name expandable'>enginePriority</a><span> : Array</span></div><div class='description'><div class='short'>Defines the priority order for which Surface implementation to use. ...</div><div class='long'><p>Defines the priority order for which Surface implementation to use. The first\none supported by the current environment will be used.</p>\n<p>Defaults to: <code>[&quot;Canvas&quot;]</code></p></div></div></div><div id='cfg-gradients' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.draw.Component'>Ext.draw.Component</span><br/><a href='source/Component.html#Ext-draw-Component-cfg-gradients' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.draw.Component-cfg-gradients' class='name expandable'>gradients</a><span> : Array</span></div><div class='description'><div class='short'>(optional) Define a set of gradients that can be used as fill property in sprites. ...</div><div class='long'><p>(optional) Define a set of gradients that can be used as <code>fill</code> property in sprites.\nThe gradients array is an array of objects with the following properties:</p>\n\n<ul>\n<li><strong>id</strong> - string - The unique name of the gradient.</li>\n<li><strong>angle</strong> - number, optional - The angle of the gradient in degrees.</li>\n<li><strong>stops</strong> - object - An object with numbers as keys (from 0 to 100) and style objects\nas values</li>\n</ul>\n\n\n<pre><code>     For example:\n</code></pre>\n\n<pre><code>            gradients: [{\n                id: 'gradientId',\n                angle: 45,\n                stops: {\n                    0: {\n                        color: '#555'\n                    },\n                    100: {\n                        color: '#ddd'\n                    }\n                }\n            },  {\n                id: 'gradientId2',\n                angle: 0,\n                stops: {\n                    0: {\n                        color: '#590'\n                    },\n                    20: {\n                        color: '#599'\n                    },\n                    100: {\n                        color: '#ddd'\n                    }\n                }\n            }]\n         </code></pre>\n\n\n<pre><code>     Then the sprites can use `gradientId` and `gradientId2` by setting the fill attributes to those ids, for example:\n</code></pre>\n\n<pre><code>            sprite.setAttributes({\n                fill: 'url(#gradientId)'\n            }, true);\n         </code></pre>\n\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='cfg-viewBox' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.draw.Component'>Ext.draw.Component</span><br/><a href='source/Component.html#Ext-draw-Component-cfg-viewBox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.draw.Component-cfg-viewBox' class='name expandable'>viewBox</a><span> : Boolean</span></div><div class='description'><div class='short'>Turn on view box support which will scale and position items in the draw component to fit to the component while\nmain...</div><div class='long'><p>Turn on view box support which will scale and position items in the draw component to fit to the component while\nmaintaining aspect ratio. Note that this scaling can override other sizing settings on yor items.</p>\n<p>Defaults to: <code>true</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createSurface' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.draw.Component'>Ext.draw.Component</span><br/><a href='source/Component.html#Ext-draw-Component-method-createSurface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.draw.Component-method-createSurface' class='name expandable'>createSurface</a>( <span class='pre'>Object config</span> )</div><div class='description'><div class='short'>Create the Surface instance. ...</div><div class='long'><p>Create the Surface instance. Resolves the correct Surface implementation to\ninstantiate based on the 'enginePriority' config. Once the Surface instance is\ncreated you can use the handle to that instance to add sprites. For example:</p>\n\n<pre><code>        drawComponent.surface.add(sprite);\n     </code></pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.draw.Component'>Ext.draw.Component</span><br/><a href='source/Component.html#Ext-draw-Component-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.draw.Component-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Clean up the Surface instance on component destruction ...</div><div class='long'><p>Clean up the Surface instance on component destruction</p>\n</div></div></div><div id='method-getEventsSurface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.draw.Component'>Ext.draw.Component</span><br/><a href='source/Component.html#Ext-draw-Component-method-getEventsSurface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.draw.Component-method-getEventsSurface' class='name expandable'>getEventsSurface</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Return a reference to the Ext.draw.Surface instance from which events\nshould be relayed. ...</div><div class='long'><p>Return a reference to the <a href=\"#!/api/Ext.draw.Surface\" rel=\"Ext.draw.Surface\" class=\"docClass\">Ext.draw.Surface</a> instance from which events\nshould be relayed.</p>\n</div></div></div><div id='method-repaint' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.draw.Component'>Ext.draw.Component</span><br/><a href='source/Component.html#Ext-draw-Component-method-repaint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.draw.Component-method-repaint' class='name expandable'>repaint</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Some engines need a repaint after the component has been laid out. ...</div><div class='long'><p>Some engines need a repaint after the component has been laid out.\nThis is generally handled in Chart.js, and so should only be triggered when\nwe're strictly adding Sprites to the surface (and not creating a chart).</p>\n</div></div></div></div></div></div></div>","subclasses":["Ext.chart.Chart"],"component":true,"meta":{},"mixedInto":[],"aliases":{},"superclasses":["Ext.Component"],"parentMixins":[],"inheritdoc":null,"members":{"property":[],"css_var":[],"event":[],"css_mixin":[],"method":[{"meta":{},"owner":"Ext.draw.Component","tagname":"method","name":"createSurface","id":"method-createSurface"},{"meta":{},"owner":"Ext.draw.Component","tagname":"method","name":"destroy","id":"method-destroy"},{"meta":{"private":true},"owner":"Ext.draw.Component","tagname":"method","name":"getEventsSurface","id":"method-getEventsSurface"},{"meta":{},"owner":"Ext.draw.Component","tagname":"method","name":"repaint","id":"method-repaint"}],"cfg":[{"meta":{},"owner":"Ext.draw.Component","tagname":"cfg","name":"autoSize","id":"cfg-autoSize"},{"meta":{},"owner":"Ext.draw.Component","tagname":"cfg","name":"enginePriority","id":"cfg-enginePriority"},{"meta":{},"owner":"Ext.draw.Component","tagname":"cfg","name":"gradients","id":"cfg-gradients"},{"meta":{},"owner":"Ext.draw.Component","tagname":"cfg","name":"viewBox","id":"cfg-viewBox"}]},"tagname":"class","extends":"Ext.Component","name":"Ext.draw.Component","alternateClassNames":[],"requires":[],"files":[{"href":"Component.html#Ext-draw-Component","filename":"Component.js"}],"singleton":false,"id":"class-Ext.draw.Component","statics":{"property":[],"event":[],"css_var":[],"css_mixin":[],"method":[],"cfg":[]}});