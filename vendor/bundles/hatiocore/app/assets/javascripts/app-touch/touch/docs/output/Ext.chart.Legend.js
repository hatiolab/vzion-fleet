Ext.data.JsonP.Ext_chart_Legend({"html_meta":{},"mixins":["Ext.mixin.Identifiable","Ext.util.Observable"],"code_type":"ext_define","inheritable":false,"uses":["Ext.chart.legend.View"],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>Ext.chart.Legend</strong></div></div><h4>Mixins</h4><div class='dependency'>Ext.mixin.Identifiable</div><div class='dependency'>Ext.util.Observable</div><h4>Uses</h4><div class='dependency'><a href='#!/api/Ext.chart.legend.View' rel='Ext.chart.legend.View' class='docClass'>Ext.chart.legend.View</a></div><h4>Files</h4><div class='dependency'><a href='source/Legend.html#Ext-chart-Legend' target='_blank'>Legend.js</a></div></pre><div class='doc-contents'><p>Defines a legend for a chart's series.\nThe 'chart' member must be set prior to rendering.\nThe legend class displays a list of legend items each of them related with a\nseries being rendered. In order to render the legend item of the proper series\nthe series configuration object must have showInLegend\nset to true.</p>\n\n<p>The legend configuration object accepts a <a href=\"#!/api/Ext.chart.Legend-cfg-position\" rel=\"Ext.chart.Legend-cfg-position\" class=\"docClass\">position</a> as parameter, which allows\ncontrol over where the legend appears in relation to the chart. The position can be\nconfiured with different values for portrait vs. landscape orientations. Also, the dock\nconfig can be used to hide the legend in a sheet docked to one of the sides.</p>\n\n<p>Full example:</p>\n\n<pre><code>    var store = new Ext.data.JsonStore({\n        fields: ['name', 'data1', 'data2', 'data3', 'data4', 'data5'],\n        data: [\n            {'name':'metric one', 'data1':10, 'data2':12, 'data3':14, 'data4':8, 'data5':13},\n            {'name':'metric two', 'data1':7, 'data2':8, 'data3':16, 'data4':10, 'data5':3},\n            {'name':'metric three', 'data1':5, 'data2':2, 'data3':14, 'data4':12, 'data5':7},\n            {'name':'metric four', 'data1':2, 'data2':14, 'data3':6, 'data4':1, 'data5':23},\n            {'name':'metric five', 'data1':27, 'data2':38, 'data3':36, 'data4':13, 'data5':33}\n        ]\n    });\n\n    new <a href=\"#!/api/Ext.chart.Chart\" rel=\"Ext.chart.Chart\" class=\"docClass\">Ext.chart.Chart</a>({\n        renderTo: Ext.getBody(),\n        width: 500,\n        height: 300,\n        animate: true,\n        store: store,\n        shadow: true,\n        theme: 'Category1',\n        legend: {\n            position: 'top'\n        },\n         axes: [{\n                type: 'Numeric',\n                grid: true,\n                position: 'left',\n                fields: ['data1', 'data2', 'data3', 'data4', 'data5'],\n                title: 'Sample Values',\n                grid: {\n                    odd: {\n                        opacity: 1,\n                        fill: '#ddd',\n                        stroke: '#bbb',\n                        'stroke-width': 1\n                    }\n                },\n                minimum: 0,\n                adjustMinimumByMajorUnit: 0\n            }, {\n                type: 'Category',\n                position: 'bottom',\n                fields: ['name'],\n                title: 'Sample Metrics',\n                grid: true,\n                label: {\n                    rotate: {\n                        degrees: 315\n                    }\n                }\n        }],\n        series: [{\n            type: 'area',\n            highlight: false,\n            axis: 'left',\n            xField: 'name',\n            yField: ['data1', 'data2', 'data3', 'data4', 'data5'],\n            style: {\n                opacity: 0.93\n            }\n        }]\n    });\n    </code></pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-doubleTapThreshold' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-cfg-doubleTapThreshold' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-cfg-doubleTapThreshold' class='name expandable'>doubleTapThreshold</a><span> : Number</span></div><div class='description'><div class='short'>The duration in milliseconds in which two consecutive taps will be considered a doubletap. ...</div><div class='long'><p>The duration in milliseconds in which two consecutive taps will be considered a doubletap.</p>\n<p>Defaults to: <code>250</code></p></div></div></div><div id='cfg-popup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-cfg-popup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-cfg-popup' class='name expandable'>popup</a><span> : Boolean</span></div><div class='description'><div class='short'>If set to true, then rather than rendering alongside the chart area, an icon will be inserted\ninto chart toolbar and ...</div><div class='long'><p>If set to <code>true</code>, then rather than rendering alongside the chart area, an icon will be inserted\ninto chart toolbar and the legend will be shown within a Ext.Sheet when clicked on the button.</p>\n\n<p>This prevents screen real-estate from being taken up by the legend,\nwhich is especially important on small screen devices.</p>\n</div></div></div><div id='cfg-position' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-cfg-position' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-cfg-position' class='name expandable'>position</a><span> : String</span></div><div class='description'><div class='short'>The position of the legend in relation to the chart. ...</div><div class='long'><p>The position of the legend in relation to the chart. Can be one of:</p>\n\n<ul>\n<li>\"top\" - positions the legend centered at the top of the chart</li>\n<li>\"bottom\" - positions the legend centered at the bottom of the chart</li>\n<li>\"left\" - positions the legend centered on the left side of the chart</li>\n<li>\"right\" - positions the legend centered on the right side of the chart</li>\n<li>an Object with numeric properties <code>x</code> and <code>y</code>, and boolean property <code>vertical</code> - displays the legend\nfloating on top of the chart at the given x/y coordinates. If <code>vertical:true</code> the legend items will\nbe arranged stacked vertically, otherwise they will be arranged side-by-side. If dock is\nset to <code>true</code> then this position config will be ignored and will dock to the bottom.</li>\n</ul>\n\n\n<p>In addition, you can specify different legend alignments based on the orientation of the browser viewport,\nfor instance you might want to put the legend on the right in landscape orientation but on the bottom in\nportrait orientation. To achieve this, you can set the <code>position</code> config to an Object with <code>portrait</code> and\n<code>landscape</code> properties, and set the value of those properties to one of the recognized value types described\nabove. For example, the following config will put the legend on the right in landscape but float it on top\nof the chart at position 10,10 in portrait:</p>\n\n<pre><code>legend: {\n    position: {\n        landscape: 'right',\n        portrait: {\n            x: 10,\n            y: 10,\n            vertical: true\n        }\n    }\n}\n</code></pre>\n<p>Defaults to: <code>&quot;bottom&quot;</code></p></div></div></div><div id='cfg-visible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-cfg-visible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-cfg-visible' class='name expandable'>visible</a><span> : Boolean</span></div><div class='description'><div class='short'>Whether or not the legend should be displayed. ...</div><div class='long'><p>Whether or not the legend should be displayed.</p>\n<p>Defaults to: <code>true</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.chart.Legend-method-constructor' class='name expandable'>Ext.chart.Legend</a>( <span class='pre'>Object config</span> ) : Object</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getDockedPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-getDockedPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-getDockedPosition' class='name expandable'>getDockedPosition</a>( <span class='pre'></span> ) : String/Object</div><div class='description'><div class='short'>Get the target position of the legend, after resolving any orientation-specific configs. ...</div><div class='long'><p>Get the target position of the legend, after resolving any orientation-specific configs.\nIn most cases this method should be used rather than reading the <code>position</code> property directly.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String/Object</span><div class='sub-desc'><p>The position config value</p>\n</div></li></ul></div></div></div><div id='method-getInsetSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-getInsetSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-getInsetSize' class='name expandable'>getInsetSize</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Calculate and return the number of pixels that should be reserved for the legend along\nits edge. ...</div><div class='long'><p>Calculate and return the number of pixels that should be reserved for the legend along\nits edge. Only returns a non-zero value if the legend is positioned to one of the four\nnamed edges, and if it is not docked.</p>\n</div></div></div><div id='method-hide' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-hide' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-hide' class='name expandable'>hide</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Hides the legend if it is currently shown. ...</div><div class='long'><p>Hides the legend if it is currently shown.</p>\n</div></div></div><div id='method-isDisplayed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-isDisplayed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-isDisplayed' class='name expandable'>isDisplayed</a>( <span class='pre'></span> ) : Boolean<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Determine whether the legend should be displayed. ...</div><div class='long'><p>Determine whether the legend should be displayed. Looks at the legend's 'visible' config,\nand also the 'showInLegend' config for each of the series.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isOrientationSpecific' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-isOrientationSpecific' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-isOrientationSpecific' class='name expandable'>isOrientationSpecific</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Returns whether the legend is configured with orientation-specific positions. ...</div><div class='long'><p>Returns whether the legend is configured with orientation-specific positions.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isVertical' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-isVertical' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-isVertical' class='name expandable'>isVertical</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Returns whether the orientation of the legend items is vertical. ...</div><div class='long'><p>Returns whether the orientation of the legend items is vertical.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if the legend items are to be arranged stacked vertically, <code>false</code> if they\nare to be arranged side-by-side.</p>\n</div></li></ul></div></div></div><div id='method-onCombine' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-onCombine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-onCombine' class='name expandable'>onCombine</a>( <span class='pre'><a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a> series, <a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a> index1, <a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a> index2</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Fired when two legend items are combined via drag-drop in the legend view. ...</div><div class='long'><p>Fired when two legend items are combined via drag-drop in the legend view.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>series</span> : <a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a><div class='sub-desc'><p>The series for the combined items</p>\n</div></li><li><span class='pre'>index1</span> : <a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a><div class='sub-desc'><p>The series for the combined items</p>\n</div></li><li><span class='pre'>index2</span> : <a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a><div class='sub-desc'><p>The series for the combined items</p>\n</div></li></ul></div></div></div><div id='method-orient' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-orient' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-orient' class='name expandable'>orient</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Update the legend component to match the current viewport orientation. ...</div><div class='long'><p>Update the legend component to match the current viewport orientation.</p>\n</div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Reset the legend back to its initial state before any user interactions. ...</div><div class='long'><p>Reset the legend back to its initial state before any user interactions.</p>\n</div></div></div><div id='method-show' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-show' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-show' class='name expandable'>show</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Shows the legend if it is currently hidden. ...</div><div class='long'><p>Shows the legend if it is currently hidden.</p>\n</div></div></div><div id='method-updateLocation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-method-updateLocation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-method-updateLocation' class='name expandable'>updateLocation</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Update the position of the legend if it is displayed and not docked. ...</div><div class='long'><p>Update the position of the legend if it is displayed and not docked.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-combine' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-event-combine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-event-combine' class='name expandable'>combine</a>( <span class='pre'><a href=\"#!/api/Ext.chart.Legend\" rel=\"Ext.chart.Legend\" class=\"docClass\">Ext.chart.Legend</a> legend, <a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a> series, Number index1, Number index2, Object eOpts</span> )</div><div class='description'><div class='short'>Fired when two legend items are combined together via drag-drop. ...</div><div class='long'><p>Fired when two legend items are combined together via drag-drop.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>legend</span> : <a href=\"#!/api/Ext.chart.Legend\" rel=\"Ext.chart.Legend\" class=\"docClass\">Ext.chart.Legend</a><div class='sub-desc'>\n</div></li><li><span class='pre'>series</span> : <a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a><div class='sub-desc'><p>The series owning the items being combined</p>\n</div></li><li><span class='pre'>index1</span> : Number<div class='sub-desc'><p>The index of the first legend item</p>\n</div></li><li><span class='pre'>index2</span> : Number<div class='sub-desc'><p>The index of the second legend item</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n</div></li></ul></div></div></div><div id='event-split' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.chart.Legend'>Ext.chart.Legend</span><br/><a href='source/Legend.html#Ext-chart-Legend-event-split' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.chart.Legend-event-split' class='name expandable'>split</a>( <span class='pre'><a href=\"#!/api/Ext.chart.Legend\" rel=\"Ext.chart.Legend\" class=\"docClass\">Ext.chart.Legend</a> legend, <a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a> series, Number index, Object eOpts</span> )</div><div class='description'><div class='short'>Fired when a previously-combined legend item is split into its original constituent items. ...</div><div class='long'><p>Fired when a previously-combined legend item is split into its original constituent items.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>legend</span> : <a href=\"#!/api/Ext.chart.Legend\" rel=\"Ext.chart.Legend\" class=\"docClass\">Ext.chart.Legend</a><div class='sub-desc'>\n</div></li><li><span class='pre'>series</span> : <a href=\"#!/api/Ext.chart.series.Series\" rel=\"Ext.chart.series.Series\" class=\"docClass\">Ext.chart.series.Series</a><div class='sub-desc'><p>The series owning the item being split</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The index of the legend item being split</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n</div></li></ul></div></div></div></div></div></div></div>","subclasses":[],"component":false,"meta":{},"mixedInto":[],"aliases":{},"superclasses":["Ext.Base"],"parentMixins":[],"inheritdoc":null,"members":{"property":[],"css_var":[],"event":[{"meta":{},"owner":"Ext.chart.Legend","tagname":"event","name":"combine","id":"event-combine"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"event","name":"split","id":"event-split"}],"css_mixin":[],"method":[{"meta":{},"owner":"Ext.chart.Legend","tagname":"method","name":"constructor","id":"method-constructor"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"method","name":"getDockedPosition","id":"method-getDockedPosition"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"method","name":"getInsetSize","id":"method-getInsetSize"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"method","name":"hide","id":"method-hide"},{"meta":{"private":true},"owner":"Ext.chart.Legend","tagname":"method","name":"isDisplayed","id":"method-isDisplayed"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"method","name":"isOrientationSpecific","id":"method-isOrientationSpecific"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"method","name":"isVertical","id":"method-isVertical"},{"meta":{"protected":true},"owner":"Ext.chart.Legend","tagname":"method","name":"onCombine","id":"method-onCombine"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"method","name":"orient","id":"method-orient"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"method","name":"reset","id":"method-reset"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"method","name":"show","id":"method-show"},{"meta":{"private":true},"owner":"Ext.chart.Legend","tagname":"method","name":"updateLocation","id":"method-updateLocation"}],"cfg":[{"meta":{},"owner":"Ext.chart.Legend","tagname":"cfg","name":"doubleTapThreshold","id":"cfg-doubleTapThreshold"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"cfg","name":"popup","id":"cfg-popup"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"cfg","name":"position","id":"cfg-position"},{"meta":{},"owner":"Ext.chart.Legend","tagname":"cfg","name":"visible","id":"cfg-visible"}]},"tagname":"class","extends":"Ext.Base","name":"Ext.chart.Legend","alternateClassNames":[],"requires":[],"files":[{"href":"Legend.html#Ext-chart-Legend","filename":"Legend.js"}],"singleton":false,"id":"class-Ext.chart.Legend","statics":{"property":[],"event":[],"css_var":[],"css_mixin":[],"method":[],"cfg":[]}});